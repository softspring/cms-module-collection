{#<script src="https://cdn.tiny.cloud/1/0zxo7hhr52tjj8ir7zp8ujyxq2xrwy561vrc8oqr6oozfjbi/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>#}

<article id="{{ form.id.vars.data|default('') }}"
     class="text-break content-escape"
     data-edit-id-target="contentContainerId">

    <div class="wysiwyg-preview"
        data-edit-content-target="content"
        data-edit-content-escape="true"

        data-bs-toggle="modal"
        data-bs-target="#{{ id }}Modal"
        data-default-text="Enter your text">
        {{ form.content.vars.data|default('Enter your text')|replace({'href': ''})|raw }}
    </div>

    <!-- Modal -->
    <div class="modal fade" id="{{ id }}Modal" data-wysiwyg-modal data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="{{ id }}ModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">WYSIWYG description</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    {{ form_row(form.content) }}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Done</button>
                </div>
            </div>
        </div>
    </div>
</article>
<script>
    if (typeof initTiny === 'undefined') {
        let initTiny = function () {
            tinymce.init({
                selector: '{{ '#' ~ id ~ ' [data-wysiwyg]' }}',
                height: 300,
                menubar: false,
                plugins:
                    'code ' +
                    'image link media template code ' +
                    'table charmap pagebreak nonbreaking anchor ' +
                    'insertdatetime advlist lists wordcount help ' +
                    'charmap quickbars emoticons',
                toolbar: 'undo redo | bold italic underline strikethrough |' +
                    ' alignleft aligncenter alignright alignjustify | link anchor | ' +
                    ' outdent indent |  numlist bullist | forecolor backcolor removeformat | ' +
                    ' charmap emoticons | print |' +
                    ' code | ltr rtl | fontsize blocks',
                toolbar_sticky: false,
                setup: function (editor) {
                    editor.on('init', function (e) {
                        editor.setContent('{{ form.content.vars.value|replace({'\n': '','\r':''})|raw }}');
                    });
                }
            });
        }
        window.addEventListener('load', function () {
            initTiny();
        }, false);

        window.addEventListener('cms.module.move.down', function () {
            initTiny();
        }, false);

        window.addEventListener('cms.module.move.up', function () {
            initTiny();
        }, false);

        if (typeof tinymce !== 'undefined') {
            initTiny();
        }
    }

</script>

